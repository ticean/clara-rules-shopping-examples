#!/usr/bin/env bash
# Experimental data-driven Kafka topic creator.
# Requires jq dependency.

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

docker_image=confluentinc/cp-enterprise-kafka:4.1.1
network=streams.reaction.localhost
zookeeper=zookeeper.streams.reaction.localhost:2181

data_file=$1
if [ ! -f "${data_file}" ]; then
  echo "File arg is required at position 0" >&2
  exit 1
fi;

for row in $( jq -c '.[]' "${data_file}"); do
  _get() {
   echo "${1}" | jq -c -r "${2}"
  }

  topic=$(_get "${row}" '.topic')
  partitions=$(_get "${row}" '.partitions')
  replication_factor=$(_get "${row}" '.replication_factor')

  config_flags=$(_get "${row}" '.config | join(" --config ")')
  if [ -n "${config_flags}" ]; then
    config=" --config ${config_flags} "
  else
    config=""
  fi

  echo "Creating Kafka topic ${topic}"
  docker run --rm --network "${network}" \
    --volume "${__dir}/wait-for-it.sh:/usr/local/bin/wait-for-it.sh" \
    "${docker_image}" \
      /usr/local/bin/wait-for-it.sh "${zookeeper}" --strict -t 30 -- \
        kafka-topics --create \
          --topic "${topic}" \
          ${config} \
          --if-not-exists \
          --partitions "${partitions}" \
          --replication-factor "${replication_factor}" \
          --zookeeper "${zookeeper}"
done
